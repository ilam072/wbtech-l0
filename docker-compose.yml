version: '3.8'

services:
    postgres:
        image: postgres:16-alpine
        container_name: postgres
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: orders_service
        ports:
            - "5433:5432"
        volumes:
            - postgres_data:/var/lib/postgresql/data
        networks:
            - orders-service

    kafka:
        image: bitnami/kafka:latest
        ports:
            - "9092:9092"
        container_name: kafka
        environment:
            - KAFKA_ENABLE_KRAFT=yes
            - KAFKA_CFG_NODE_ID=0
            - KAFKA_CFG_PROCESS_ROLES=broker,controller
            - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
            - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
            - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://localhost:9092
            - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=PLAINTEXT:PLAINTEXT,CONTROLLER:PLAINTEXT
            - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
            - KAFKA_CFG_INTER_BROKER_LISTENER_NAME=PLAINTEXT
        healthcheck:
            test: [ "CMD", "kafka-topics.sh", "--bootstrap-server", "kafka:9092", "--list" ]
            interval: 10s
            timeout: 5s
            retries: 10
        volumes:
            - kafka_data:/bitnami/kafka
        networks:
            - orders-service

    migrate:
        image: migrate/migrate:v4.15.2
        container_name: migrate
        depends_on:
            - postgres
        command: [
            "-path=/migrations",
            "-database=postgres://postgres:postgres@postgres:5432/orders_service?sslmode=disable",
            "up"
        ]
        volumes:
            - ./migrations:/migrations
        networks:
            - orders-service

volumes:
    postgres_data:
    kafka_data:

networks:
    orders-service:
        driver: bridge